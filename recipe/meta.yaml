{% set version = "1.2.335" %}
{% set deno_version = load_file_regex(load_file='./configuration', regex_pattern='export\sDENO=v(\S+)') %}
{% set deno_dom_version = load_file_regex(load_file='configuration', regex_pattern='export DENO_DOM=v([^-]+)') %}
{% set pandoc_version = load_file_regex(load_file='configuration', regex_pattern='export PANDOC=(\S+)') %}

package:
  name: quarto
  version: {{ version }}

source:
  url: https://github.com/quarto-dev/quarto-cli/releases/download/v{{ version }}/quarto-{{ version }}.tar.gz
  sha256: 7527e882f2d734fdb2c4c5c12eec1dd709a5ede71393ecfadf4280b839a9439f
  patches:
  - 0001-look-for-tinytex-in-conda-bin-paths-when-CONDA_PREFI.patch
  - 0001-win-conda-path-overrides.patch
  - 0001-respect-QUARTO_PANDOC-in-update-pandoc.patch

build:
  number: 1

requirements:
  build:
    - deno      {{ deno_version.group(1) if deno_version else "" }}
    - deno-dom  {{ deno_dom_version.group(1) if deno_dom_version else "" }}
    - esbuild
    - pandoc    {{ pandoc_version.group(1) if deno_dom_version else "" }}
  run:
    # Deno, deno-dom and pandoc have proven to be fickle
    #    regarding Quarto's source code. The pinning here
    #    is not so much that there are binary compatibility
    #    issues, but just that these dependencies are only
    #    known to work in a pretty narrow range.
    - {{ pin_compatible("deno", max_pin="x.x.x") }}
    - {{ pin_compatible("pandoc", max_pin="x.x.x") }}
    # we vendor deno-dom JS dependencies, so it is important
    #  that the version at runtime matches the one at build time
    - {{ pin_compatible("deno-dom", max_pin="x.x.x") }}
    - esbuild
    - dart-sass

test:
  commands:
    - quarto check
  requires:
    - python >=3
    - jupyter
    - r-base >=4

about:
  home: https://quarto.org/
  license: GPL-2.0-or-later
  license_file:
    - COPYRIGHT
    - COPYING.md
  summary: An open-source scientific and technical publishing system built on Pandoc

extra:
  recipe-maintainers:
    - msarahan
